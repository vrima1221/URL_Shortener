{"version":3,"sources":["pages/NotFoundPage/NotFoundPage.tsx","api/fetchClient.ts","api/links.ts","components/ErrorNotification/ErrorNotification.tsx","components/URLForm/URLForm.tsx","components/URLInfo/URLInfo.tsx","components/URLTable/URLTable.tsx","img/UrlShortenerLogo.png","pages/URLShortener/URLShortener.tsx","utils/shrinkURL.ts","pages/About/About.tsx","pages/URLInfoPage/URLInfoPage.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["NotFoundPage","BASE_URL","request","url","method","data","options","body","JSON","stringify","headers","fetch","then","response","ok","Error","json","catch","error","console","log","client","getLinkById","id","getAll","a","ErrorNotification","message","isError","className","hidden","URLForm","errorMessage","onChange","currentUrl","onSubmit","action","type","placeholder","value","e","target","URLInfo","onRemove","fullUrl","shortUrl","href","to","onClick","URLTable","urls","map","URLShortener","useState","urlsFromServer","setUrlsFromServer","setIsError","setErrorMessage","currentURL","setCurrentURL","showErrorMessage","setTimeout","getDataFromServer","useEffect","visibleUrls","useMemo","isURLAlreadyShrinked","some","src","logo","alt","event","preventDefault","trim","shortURL","replace","slice","preparedData","postOrPatchLink","addedUrl","prev","length","urlId","prevUrls","filter","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","About","aboutTextField","useRef","aboutValue","setAboutValue","isEditing","setIsEditing","current","focus","ref","onKeyDown","key","onBlur","onDoubleClick","URLInfoPage","useParams","loadInfo","UrlId","loadedUrlInfo","Header","memo","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32ca8db1.chunk.js","sourcesContent":["import React from 'react';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h1>Page not found</h1>\n  );\n};\n","const BASE_URL = 'https://localhost:7258/ShortUrl';\n\ntype RequestMethod = 'GET' | 'POST' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return fetch(BASE_URL + url, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    })\n    // eslint-disable-next-line no-console\n    .catch(error => console.log(error));\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { dataFromServer, URL } from '../types/URL';\nimport { client } from './fetchClient';\n\nexport const getLinkById = (id: string | undefined) => {\n  return client.get<dataFromServer>(`/Get?id=${id}`);\n};\n\nexport const getAll = async () => {\n  return client.get<any>('/GetAll');\n};\n\nexport const postOrPatchLink = (url: URL) => {\n  return client.post('/CreateEdit', { ...url });\n};\n\nexport const deleteLink = (id: number) => {\n  return client.delete(`/Delete?id=${id}`);\n};\n","import React from 'react';\nimport './ErrorNotification.scss';\n\ntype Props = {\n  message: string;\n  isError: boolean;\n};\n\nexport const ErrorNotification: React.FC<Props> = (\n  {\n    message,\n    isError,\n  },\n) => {\n  return (\n    <div\n      className=\"error-notification\"\n      hidden={!isError}\n    >\n      {message}\n    </div>\n  );\n};\n","import React from 'react';\nimport './URLForm.scss';\nimport { ErrorNotification } from '../ErrorNotification/ErrorNotification';\n\ntype Props = {\n  isError: boolean\n  errorMessage: string\n  onChange: (value: string) => void\n  currentUrl: string\n  onSubmit: (event: React.FormEvent) => void\n};\n\nexport const URLForm: React.FC<Props> = ({\n  isError,\n  errorMessage,\n  onChange,\n  currentUrl,\n  onSubmit,\n}) => {\n  return (\n    <>\n      <form\n        className=\"form\"\n        action=\"\"\n        onSubmit={onSubmit}\n      >\n        <input\n          className=\"form__input\"\n          type=\"url\"\n          placeholder=\"Input URL to shrink\"\n          value={currentUrl}\n          onChange={e => onChange(e.target.value)}\n        />\n        <button\n          className=\"form__button\"\n          type=\"submit\"\n        >\n          Shrink\n        </button>\n      </form>\n\n      <ErrorNotification isError={isError} message={errorMessage} />\n    </>\n  );\n};\n","import React from 'react';\nimport './URLInfo.scss';\nimport { Link } from 'react-router-dom';\nimport { URL } from '../../types/URL';\n\ntype Props = {\n  url: URL\n  onRemove: (id: number) => void\n};\n\nexport const URLInfo: React.FC<Props> = ({ url, onRemove }) => {\n  const { fullUrl, shortUrl, id } = url;\n\n  // eslint-disable-next-line no-console\n  console.log(shortUrl);\n\n  return (\n    <tr>\n      <td className=\"fullUrl\"><a href={fullUrl}>{fullUrl}</a></td>\n      <td><a href={`https://localhost:7258/ShortUrl/GetShort?shortUrl=${shortUrl}`}>{`https://localhost:7258/ShortUrl/GetShort?shortUrl=${shortUrl}`}</a></td>\n      <td><Link to={`/${id}`}>More</Link></td>\n      <td>\n        <button\n          type=\"button\"\n          onClick={() => onRemove(id)}\n        >\n          ✖\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport './URLTable.scss';\nimport { URL } from '../../types/URL';\nimport { URLInfo } from '../URLInfo/URLInfo';\n\ntype Props = {\n  urls: URL[]\n  onRemove: (id: number) => void\n};\n\nexport const URLTable: React.FC<Props> = ({ urls, onRemove }) => {\n  return (\n    <table className=\"table\">\n      <tr>\n        <th>Full URL</th>\n        <th>Short URL</th>\n        <th>More</th>\n        <th>Remove</th>\n      </tr>\n\n      {urls.map(url => (\n        <URLInfo url={url} key={url.id} onRemove={onRemove} />\n      ))}\n    </table>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/UrlShortenerLogo.870f8c13.png\";","import React, { useEffect, useState, useMemo } from 'react';\nimport './URLShortener.scss';\nimport { Dna } from 'react-loader-spinner';\nimport { deleteLink, getAll, postOrPatchLink } from '../../api/links';\nimport { URL } from '../../types/URL';\nimport { URLForm } from '../../components/URLForm/URLForm';\nimport { URLTable } from '../../components/URLTable/URLTable';\nimport { shrinkURL } from '../../utils/shrinkURL';\nimport logo from '../../img/UrlShortenerLogo.png';\n\nexport const URLShortener: React.FC = () => {\n  const [urlsFromServer, setUrlsFromServer] = useState<URL[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [currentURL, setCurrentURL] = useState('');\n\n  const showErrorMessage = (message: string) => {\n    setIsError(true);\n    setErrorMessage(message);\n\n    setTimeout(() => setIsError(false), 3000);\n  };\n\n  const getDataFromServer = async () => {\n    const data = await getAll();\n\n    if (data) {\n      setUrlsFromServer(data.value);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      getDataFromServer();\n    } catch (error) {\n      showErrorMessage('Unable to load URLs!');\n    }\n  }, []);\n\n  const handleRemoveClick = (urlId: number) => {\n    deleteLink(urlId)\n      .then(() => (\n        setUrlsFromServer(prevUrls => prevUrls.filter(url => url.id !== urlId))\n      ))\n      .catch(() => (\n        showErrorMessage('Unable to delete URL!')\n      ));\n  };\n\n  const visibleUrls = useMemo(() => {\n    return urlsFromServer;\n  }, [urlsFromServer]);\n\n  const isURLAlreadyShrinked = visibleUrls.some(url => url.fullUrl === currentURL);\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (isURLAlreadyShrinked) {\n      showErrorMessage('URL is already shortened!');\n      setCurrentURL('');\n\n      return;\n    }\n\n    if (!currentURL.trim()) {\n      showErrorMessage('Please input your URL!');\n      setCurrentURL('');\n\n      return;\n    }\n\n    const shortURL = shrinkURL(currentURL);\n\n    const preparedData = {\n      id: 0,\n      fullUrl: currentURL,\n      shortUrl: shortURL,\n    };\n\n    setCurrentURL('');\n    postOrPatchLink(preparedData)\n      .then((addedUrl) => (\n        setUrlsFromServer(prev => [\n          ...prev,\n          addedUrl.value,\n        ])));\n  };\n\n  return (\n    <div className=\"container\">\n      <img\n        className=\"shortener-logo\"\n        src={logo}\n        alt=\"URL shortener logo\"\n      />\n      <URLForm\n        isError={isError}\n        errorMessage={errorMessage}\n        onChange={setCurrentURL}\n        currentUrl={currentURL}\n        onSubmit={handleFormSubmit}\n      />\n      {visibleUrls.length !== 0 ? (\n        <>\n          <URLTable urls={visibleUrls} onRemove={handleRemoveClick} />\n        </>\n      ) : (\n        <Dna\n          visible\n          height=\"150\"\n          width=\"150\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"dna-wrapper\"\n        />\n      )}\n    </div>\n  );\n};\n","export const shrinkURL = (url: string) => {\n  const shortURL = `${url.replace(/[^a-z]/g, '').slice(-6)}`;\n\n  return shortURL;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport './About.scss';\nimport { Link } from 'react-router-dom';\n\nconst defaultAboutValue = 'A URL shortener is a tool that takes a long URL and generates a shorter, more manageable URL that redirects to the original URL when clicked. This is done using an API request with a search for the proper full link from the shortened version. You also can edit this text field.';\n\nexport const About: React.FC = () => {\n  const aboutTextField = useRef<HTMLInputElement>(null);\n\n  const [aboutValue, setAboutValue] = useState(defaultAboutValue);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    if (aboutTextField.current) {\n      aboutTextField.current.focus();\n    }\n  }, [isEditing]);\n\n  const handleDoubleClickEditTitle = () => setIsEditing(true);\n\n  const handleSubmitAboutValueChange = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  const handleEscKeyDownCancelEditing = (\n    event: React.KeyboardEvent<HTMLInputElement>,\n  ) => {\n    if (event.key === 'Escape') {\n      setIsEditing(false);\n    }\n  };\n\n  return (\n    <div className=\"about\">\n      <h1 className=\"about__title\">Learn more about URL Shortener!</h1>\n\n      <div className=\"about__text-container\">\n        {isEditing ? (\n          <form onSubmit={handleSubmitAboutValueChange}>\n            <input\n              type=\"text\"\n              ref={aboutTextField}\n              className=\"about__text-field\"\n              value={aboutValue}\n              onChange={e => setAboutValue(e.target.value)}\n              onKeyDown={handleEscKeyDownCancelEditing}\n              onBlur={() => setIsEditing(false)}\n            />\n          </form>\n        ) : (\n          <p\n            className=\"about__text\"\n            onDoubleClick={handleDoubleClickEditTitle}\n          >\n            {aboutValue}\n          </p>\n        )}\n      </div>\n\n      <Link to=\"/\">\n        <div className=\"about__link\">\n          Lets try it!\n        </div>\n      </Link>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './URLInfoPage.scss';\nimport { useParams } from 'react-router-dom';\nimport { Dna } from 'react-loader-spinner';\nimport { getLinkById } from '../../api/links';\nimport { dataFromServer } from '../../types/URL';\n\nexport const URLInfoPage: React.FC = () => {\n  const { id } = useParams();\n\n  const [currentUrl, setCurrentURL] = useState<dataFromServer| null>(null);\n\n  const loadInfo = async (UrlId: string | undefined) => {\n    if (id) {\n      const loadedUrlInfo = await getLinkById(UrlId);\n\n      setCurrentURL(loadedUrlInfo);\n    }\n  };\n\n  useEffect(() => {\n    loadInfo(id);\n  }, []);\n\n  // eslint-disable-next-line no-console\n  console.log(currentUrl);\n\n  return (\n    <>\n      {currentUrl ? (\n        <div className=\"info\">\n          <h1 className=\"info__title\">URL Info page</h1>\n          <p className=\"info__full\">\n            {'Full URL: '}\n            <a href={currentUrl.value.fullUrl}>{currentUrl.value.fullUrl}</a>\n          </p>\n          <p className=\"info__short\">\n            {'Short URL: '}\n            <a href={`https://localhost:7258/ShortUrl/GetShort?shortUrl=${currentUrl.value.shortUrl}`}>{`https://localhost:7258/ShortUrl/GetShort?shortUrl=${currentUrl.value.shortUrl}`}</a>\n          </p>\n        </div>\n      ) : (\n        <Dna\n          visible\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"dna-wrapper\"\n        />\n      )}\n    </>\n\n  );\n};\n","import React, { memo } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport './Header.scss';\nimport logo from '../../img/UrlShortenerLogo.png';\n\nexport const Header: React.FC = memo(() => {\n  return (\n    <header className=\"header\">\n      <Link to=\"/\" className=\"header__logo-link\">\n        <img\n          className=\"header__logo\"\n          src={logo}\n          alt=\"NiceGadgets logo\"\n        />\n      </Link>\n\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\">\n            <NavLink to=\"/\" className=\"nav__link\">\n              home\n            </NavLink>\n          </li>\n\n          <li className=\"nav__item\">\n            <NavLink to=\"/about\" className=\"nav__link\">\n              About\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n});\n","import React from 'react';\nimport './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\nimport { URLShortener } from './pages/URLShortener/URLShortener';\nimport { About } from './pages/About/About';\nimport { URLInfoPage } from './pages/URLInfoPage/URLInfoPage';\nimport { Header } from './components/Header/Header';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<URLShortener />} />\n          <Route path=\"/:id\" element={<URLInfoPage />} />\n        </Routes>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}